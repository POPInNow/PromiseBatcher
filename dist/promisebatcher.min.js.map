{"version":3,"sources":["webpack://PromiseBatcher/webpack/universalModuleDefinition","webpack://PromiseBatcher/webpack/bootstrap","webpack://PromiseBatcher/./src/constants.js","webpack://PromiseBatcher/./src/queue-object.js","webpack://PromiseBatcher/./src/promise-batching-queue.js","webpack://PromiseBatcher/./src/promise-batcher.js"],"names":["root","factory","exports","module","define","amd","PromiseBatcher","window","e","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","iterator","constructor","TYPE_FUNCTION","QueueObject","length","configurable","writable","_constants","generateId","replace","Math","random","toString","resolveFunction","rejectFunction","promiseGenerator","TypeError","this","Error","_typeof","__resolveFunction","__rejectFunction","__promiseGenerator","__id","result","error","_queueObject","PromiseBatchingQueue","maxSize","Promise","__maxSize","__activeQueue","__waitingQueue","__notifyWaiting","__firePromise","__queuePromise","__removeItemFromArray","queue","getActiveSize","getWaitingSize","getMaxSize","id","size","item","getId","splice","firstWaiting","shift","queueObject","_this","push","getPromiseGenerator","then","resolve","catch","reject","_this2","_promiseBatchingQueue","arguments"],"mappings":"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","file":"promisebatcher.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"PromiseBatcher\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PromiseBatcher\"] = factory();\n\telse\n\t\troot[\"PromiseBatcher\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","export const TYPE_FUNCTION = typeof (function () {});\n","import { TYPE_FUNCTION } from './constants';\n\n/**\n * Pulled from Stack Overflow...\n * @return {string}\n */\nconst generateId = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = Math.random() * 16 | 0, v = c === 'x' ? r : ((r & 0x3) | 0x8);\n    return v.toString(16);\n  });\n};\n\nexport class QueueObject {\n\n  constructor (resolveFunction, rejectFunction, promiseGenerator) {\n    if (!resolveFunction) {\n      throw Error('QueueObject missing resolveFunction');\n    }\n    if (!rejectFunction) {\n      throw Error('QueueObject missing rejectFunction');\n    }\n    if (!promiseGenerator) {\n      throw Error('QueueObject missing promiseGenerator');\n    }\n    if (typeof(promiseGenerator) !== TYPE_FUNCTION) {\n      throw Error('promiseGenerator argument must be a function');\n    }\n    if (typeof(resolveFunction) !== TYPE_FUNCTION) {\n      throw Error('resolveFunction argument must be a function');\n    }\n    if (typeof(rejectFunction) !== TYPE_FUNCTION) {\n      throw Error('rejectFunction argument must be a function');\n    }\n\n    this.__resolveFunction = resolveFunction;\n    this.__rejectFunction = rejectFunction;\n    this.__promiseGenerator = promiseGenerator;\n    this.__id = generateId();\n  }\n\n  /**\n   * Gets the promise generator function\n   * @return {Function}\n   */\n  getPromiseGenerator () {\n    return this.__promiseGenerator;\n  }\n\n  /**\n   * Gets the id\n   * @return {string}\n   */\n  getId () {\n    return this.__id;\n  }\n\n  /**\n   * Call the cached Promise resolve with the result\n   */\n  resolve (result) {\n    this.__resolveFunction(result);\n  }\n\n  /**\n   * Call the cached Promise reject with the error\n   */\n  reject (error) {\n    this.__rejectFunction(error);\n  }\n}\n","import { QueueObject } from './queue-object';\nimport { TYPE_FUNCTION } from './constants';\n\nexport class PromiseBatchingQueue {\n\n  constructor (maxSize) {\n    if (Promise === undefined || Promise === null || !Promise) {\n      throw Error('Promise is not found in the global scope! Cannot use PromiseBatcher.');\n    }\n\n    if (maxSize <= 0) {\n      throw Error('maxSize must be greater than 0');\n    }\n\n    this.__maxSize = maxSize;\n    this.__activeQueue = [];\n    this.__waitingQueue = [];\n\n    this.__notifyWaiting = this.__notifyWaiting.bind(this);\n    this.__firePromise = this.__firePromise.bind(this);\n    this.__queuePromise = this.__queuePromise.bind(this);\n    this.__removeItemFromArray = this.__removeItemFromArray.bind(this);\n\n    this.queue = this.queue.bind(this);\n    this.getActiveSize = this.getActiveSize.bind(this);\n    this.getWaitingSize = this.getWaitingSize.bind(this);\n    this.getMaxSize = this.getMaxSize.bind(this);\n  }\n\n  /**\n   * Return the current size of the active queue\n   * @return {number}\n   */\n  getActiveSize () {\n    return this.__activeQueue.length;\n  }\n\n  /**\n   * Return the current size of the waiting queue\n   * @return {number}\n   */\n  getWaitingSize () {\n    return this.__waitingQueue.length;\n  }\n\n  /**\n   * Return the max size of the active queue\n   * @return {number}\n   */\n  getMaxSize () {\n    return this.__maxSize;\n  }\n\n  /**\n   * Remove the item with the given id from the active queue\n   * @private\n   *\n   * @param {string} id\n   * @return {QueueObject|null} Item removed\n   */\n  __removeItemFromArray (id) {\n    const queue = this.__activeQueue;\n    const size = queue.length;\n    for (let i = 0; i < size; ++i) {\n      const item = queue[i];\n      if (id === item.getId()) {\n        queue.splice(i, 1);\n        return item;\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Notify any waiting members in the queue if there is space in the active queue\n   * @private\n   */\n  __notifyWaiting () {\n    // The waiting queue has been notified, if a promise can run, do it\n    if (this.__activeQueue.length < this.__maxSize) {\n      if (this.__waitingQueue.length > 0) {\n        // Shift the first item out of the waiting queue\n        const firstWaiting = this.__waitingQueue.shift();\n        this.__firePromise(firstWaiting);\n      }\n    }\n  }\n\n  /**\n   * Fire the promise from the queue object, and pass its resolve or reject back to the caller.\n   * @private\n   *\n   * @param {QueueObject} queueObject\n   */\n  __firePromise (queueObject) {\n    // Add it to the active queue and wait for it to finish\n    this.__activeQueue.push(queueObject);\n\n    // Once the promise finishes, remove it from the queue and return to the caller\n    const generator = queueObject.getPromiseGenerator();\n    generator().then(result => {\n      const item = this.__removeItemFromArray(queueObject.getId());\n      if (item != null) {\n        item.resolve(result);\n\n        // Now that the queue has been freed up, notify any waiting Promises\n        this.__notifyWaiting();\n      }\n    }).catch(error => {\n      const item = this.__removeItemFromArray(queueObject.getId());\n      if (item != null) {\n        item.reject(error);\n\n        // Now that the queue has been freed up, notify any waiting Promises\n        this.__notifyWaiting();\n      }\n    });\n  }\n\n  /**\n   * If there is space in the activeQueue, fire the promise immediately, otherwise put it in waiting\n   * @private\n   *\n   * @param {function} promiseGenerator\n   * @return {Promise} A promise to chain off of\n   */\n  __queuePromise (promiseGenerator) {\n    return new Promise((resolve, reject) => {\n      // If there is room for this promise in the active queue\n      const queueObject = new QueueObject(resolve, reject, promiseGenerator);\n      if (this.__activeQueue.length < this.__maxSize) {\n        this.__firePromise(queueObject);\n      } else {\n        // If there is no room to run, add to the waiting queue\n        this.__waitingQueue.push(queueObject);\n      }\n    });\n  };\n\n  /**\n   * Queue up a promise to fire when the Queue is available\n   *\n   * @param {function}promiseGenerator\n   * @return {Promise} A promise to chain off of\n   */\n  queue (promiseGenerator) {\n    if (!promiseGenerator) {\n      throw Error('Must call queue() with a promiseGenerator function');\n    }\n\n    if (typeof(promiseGenerator) !== TYPE_FUNCTION) {\n      throw Error('promiseGenerator argument must be a function');\n    }\n\n    return this.__queuePromise(promiseGenerator);\n  }\n\n}\n","import { PromiseBatchingQueue } from './promise-batching-queue';\n\nexport class PromiseBatcher {\n\n  constructor () {\n    throw Error('Not allowed: Cannot construct instance of PromiseBatcher');\n  }\n\n  /**\n   * Returns a new eager acting queue\n   *\n   * The promise queue will run as many promises as it can up to the maxSize\n   * concurrently in a FIFO order.\n   *\n   * @param {number=4} maxSize\n   * @return {PromiseBatchingQueue}\n   */\n  static newEagerQueue (maxSize = 4) {\n    if (maxSize <= 0) {\n      throw Error('maxSize must be greater than 0');\n    }\n\n    return new PromiseBatchingQueue(maxSize);\n  }\n\n  /**\n   * Returns a new queue which will run promises serially in FIFO order\n   * @return {PromiseBatchingQueue}\n   */\n  static newSerialQueue () {\n    return new PromiseBatchingQueue(1);\n  }\n\n}\n\n/**\n * Export as the default too\n */\nexport default PromiseBatcher;\n"],"sourceRoot":""}